{"version":3,"sources":["api/quizQuestions.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","index.js"],"names":["quizQuestions","question","answers","type","content","Question","props","react_default","a","createElement","className","QuestionCount","counter","total","AnswerOption","name","checked","answerType","answer","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","react_transition_group","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","components_QuestionCount","questionTotal","components_Question","answerOptions","map","components_AnswerOption","Result","style","border","width","quizResult","items","index","subItems","sIndex","length","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","answersCount","result","handleAnswerSelected","bind","assertThisInitialized","_this2","shuffledAnswerOptions","shuffleArray","setState","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","event","_this3","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","objectSpread","defineProperty","entries","components_Quiz","components_Result","src","alt","renderResult","renderQuiz","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6af32726.chunk.js","sourcesContent":["var quizQuestions = [\r\n    {\r\n        question: \"Które zdanie najlepiej cie opisuje?\",\r\n        answers: [\r\n            {\r\n                type: \"Flegmatyk\",\r\n                content: \"Jestem obserwatorem\"\r\n            },\r\n            {\r\n                type: \"Choleryk\",\r\n                content: \"Jestem człowiekiem czynu\"\r\n            },\r\n            {\r\n                type: \"Sangwinik\",\r\n                content: \"Jestem emocjonalny\"\r\n            },\r\n            {\r\n                type: \"Melancholik\",\r\n                content: \"Jestem myślicielem\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Jak najlepiej ci się pracuje?\",\r\n        answers: [\r\n            {\r\n                type: \"Flegmatyk\",\r\n                content: \"W spokoju i bez nagłych sytuacji\"\r\n            },\r\n            {\r\n                type: \"Choleryk\",\r\n                content: \"Z pozycji szefa/szefowej\"\r\n            },\r\n            {\r\n                type: \"Sangwinik\",\r\n                content: \"W większym gronie osób\"\r\n            },\r\n            {\r\n                type: \"Melancholik\",\r\n                content: \"W samotności\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"W dzieciństwie często...\",\r\n        answers: [\r\n            {\r\n                type: \"Flegmatyk\",\r\n                content: \"poznawałeś/aś inne osoby\"\r\n            },\r\n            {\r\n                type: \"Choleryk\",\r\n                content: \"kłóciłeś/aś się\"\r\n            },\r\n            {\r\n                type: \"Sangwinik\",\r\n                content: \"płakałeś/aś\"\r\n            },\r\n            {\r\n                type: \"Melancholik\",\r\n                content: \"siedziałeś/aś sam\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Jak reagujesz na niepowodzenia?\",\r\n        answers: [\r\n            {\r\n                type: \"Flegmatyk\",\r\n                content: \"Szukam innego sposobu\"\r\n            },\r\n            {\r\n                type: \"Choleryk\",\r\n                content: \"Denerwuje się\"\r\n            },\r\n            {\r\n                type: \"Sangwinik\",\r\n                content: \"Próbuję ponownie\"\r\n            },\r\n            {\r\n                type: \"Melancholik\",\r\n                content: \"Załamuje się\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        question: \"Który kolor lubisz najbardziej?\",\r\n        answers: [\r\n            {\r\n                type: \"Flegmatyk\",\r\n                content: \"Zielony\"\r\n            },\r\n            {\r\n                type: \"Choleryk\",\r\n                content: \"Zółty\"\r\n            },\r\n            {\r\n                type: \"Sangwinik\",\r\n                content: \"Czerwony\"\r\n            },\r\n            {\r\n                type: \"Melancholik\",\r\n                content: \"Niebieski\"\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\nexport default quizQuestions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nfunction Question(props) {\r\n  return <h2 className=\"question\">{props.content}</h2>;\r\n}\r\n\r\nQuestion.propTypes = {\r\n  content: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      Pytanie <span>{props.counter}</span> z <span>{props.total}</span>\n    </div>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport quizQuestions from '../api/quizQuestions';\r\nfunction Result(props) {\r\n  return (\r\n    <CSSTransitionGroup\r\n      className=\"container result\"\r\n      component=\"div\"\r\n      transitionName=\"fade\"\r\n      transitionEnterTimeout={800}\r\n      transitionLeaveTimeout={500}\r\n      transitionAppear\r\n      transitionAppearTimeout={500}\r\n    >\r\n      <div>\r\n       <h1> Oto twoje wyniki</h1>\r\n       <table style={{border: '1px solid', width:'100%'}}>\r\n        <tbody>\r\n      {props.quizResult.map((items, index) => {\r\n      return (   \r\n    <tr key={index}>\r\n    {items.map((subItems, sIndex) => {\r\n\r\n      if(sIndex===0)\r\n      {\r\n        return <td style={{border: '1px solid'}} key={sIndex}> {subItems} </td>;\r\n      }\r\n      else\r\n      {\r\n        return <td style={{border: '1px solid'}} key={sIndex}> {(subItems/quizQuestions.length)*100}%</td>\r\n      }\r\n    })}\r\n    </tr> \r\n);\r\n})}  \r\n      </tbody>\r\n      </table>\r\n      </div>\r\n    </CSSTransitionGroup>\r\n  );\r\n}\r\n\r\nResult.propTypes = {\r\n  quizResult: PropTypes.arrayOf(String).isRequired\r\n};\r\n\r\nexport default Result;\r\n","import React, { Component } from 'react';\r\nimport quizQuestions from './api/quizQuestions';\r\nimport Quiz from './components/Quiz';\r\nimport Result from './components/Result';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: '',\r\n      answerOptions: [],\r\n      answer: '',\r\n      answersCount: {},\r\n      result: ''\r\n    };\r\n\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const shuffledAnswerOptions = quizQuestions.map(question =>\r\n      this.shuffleArray(question.answers)\r\n    );\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      answerOptions: shuffledAnswerOptions[0]\r\n    });\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.value);\r\n\r\n    if (this.state.questionId < quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 300);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.getResults()), 300);\r\n    }\r\n  }\r\n\r\n  setUserAnswer(answer) {\r\n    this.setState((state) => ({\r\n      answersCount: {\r\n        ...state.answersCount,\r\n        [answer]: (state.answersCount[answer] || 0) + 1\r\n      },\r\n      answer: answer\r\n    }));\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const counter = this.state.counter + 1;\r\n    const questionId = this.state.questionId + 1;\r\n\r\n    this.setState({\r\n      counter: counter,\r\n      questionId: questionId,\r\n      question: quizQuestions[counter].question,\r\n      answerOptions: quizQuestions[counter].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n\r\n  getResults() {\r\n    const answersCount = this.state.answersCount;\r\n    const arrayAnswers = Object.entries(answersCount);\r\n    return arrayAnswers;\r\n  }\r\n\r\n  setResults(result) {\r\n      this.setState({ result: result });\r\n  }\r\n\r\n  renderQuiz() {\r\n    return (\r\n      <Quiz\r\n        answer={this.state.answer}\r\n        answerOptions={this.state.answerOptions}\r\n        questionId={this.state.questionId}\r\n        question={this.state.question}\r\n        questionTotal={quizQuestions.length}\r\n        onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return <Result quizResult={this.state.result} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-header\">\r\n          <img src=\"https://i.imgur.com/pEds07b.png\" className=\"App-logo\" alt=\"logo\" />\r\n          <h2>Test Osobowości</h2>\r\n        </div>\r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}